name: CI
on:
  push:
    branches: [ master ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Getting event
        run: cat  $GITHUB_EVENT_PATH
        shell: bash
        
      - name: Getting event powershell
        run: $GITHUB_EVENT_PATH
        shell: pwsh
        
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      
      - name: run build
        run: |
          echo "GITHUB_SHA is ${{ github.sha }}"
          echo "GITHUB_REF is ${{ github.ref }}"
          echo "${{ github.event.ref }} - ${{ github.event.ref_type }}"
        
      - name: Add Lock
        shell: pwsh
        run: |
          $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
          $headers.Add("Accept", "application/vnd.github.luke-cage-preview+json")
          $headers.Add("Authorization", "Bearer ${{ secrets.PAT }}")
          $headers.Add("Content-Type", "application/json")

          $body = "{
          `n    `"required_status_checks`": {
          `n        `"strict`": false,
          `n        `"contexts`": [
          `n            `"contexts`"
          `n        ]
          `n    },
          `n    `"enforce_admins`": true,
          `n    `"required_pull_request_reviews`": {
          `n        `"dismissal_restrictions`": {
          `n            `"users`": [],
          `n            `"teams`": []
          `n        },
          `n        `"dismiss_stale_reviews`": false,
          `n        `"require_code_owner_reviews`": false,
          `n        `"required_approving_review_count`": 1
          `n    },
          `n    `"restrictions`": {
          `n        `"users`": [],
          `n        `"teams`": [],
          `n        `"apps`": []
          `n    }
          `n}"

          $response = Invoke-RestMethod 'https://api.github.com/repos/nkhanejatest/adf-dev/branches/myfeature/protection' -Method 'PUT' -Headers $headers -Body $body
          $response | ConvertTo-Json

